apiVersion: v1
kind: Template
labels:
  template: f8a-stacks-report
metadata:
  name: f8a-stacks-report
  annotations:
    description: f8a-stacks-report
objects:
- apiVersion:  batch/v1beta1
  kind: CronJob
  metadata:
    name: f8a-stacks-report
    annotations:
      description: f8a-stacks-report
  spec:
    successfulJobsHistoryLimit: 4
    failedJobsHistoryLimit: 0
    concurrencyPolicy: "Forbid"
    schedule: "${CRON_SCHEDULE}"
    jobTemplate:
      spec:
        template:
          spec:
            restartPolicy: Never
            containers:
            - name: f8a-stacks-report
              image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
              env:
                - name: BAYESIAN_GREMLIN_HTTP_SERVICE_HOST
                  value: bayesian-gremlin-http
                - name: BAYESIAN_GREMLIN_HTTP_SERVICE_PORT
                  value: "8182"
                - name: AWS_S3_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: aws
                      key: sqs-secret-access-key
                - name: AWS_S3_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: aws
                      key: s3-access-key-id
                - name: DEPLOYMENT_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      name: bayesian-config
                      key: deployment-prefix
                - name: AWS_S3_REGION
                  valueFrom:
                    configMapKeyRef:
                      name: bayesian-config
                      key: aws-default-region
                - name: PGBOUNCER_SERVICE_HOST
                  value: bayesian-pgbouncer
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: coreapi-postgres
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: coreapi-postgres
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: coreapi-postgres
                - name: SENTRY_AUTH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: worker
                      key: sentry-auth-token
                - name: REPORT_BUCKET_NAME
                  value: animukhe-developer-analytics-audit-report
                - name: NPM_MODEL_BUCKET
                  value: ${NPM_MODEL_BUCKET}
                - name: MAVEN_MODEL_BUCKET
                  value: ${MAVEN_MODEL_BUCKET}
                - name: PYPI_MODEL_BUCKET
                  value: ${PYPI_MODEL_BUCKET}
                - name: GOLANG_MODEL_BUCKET
                  value: ${GOLANG_MODEL_BUCKET}
                - name: GOLANG_TRAINING_REPO
                  value: ${GOLANG_TRAINING_REPO}
                - name: MAVEN_TRAINING_REPO
                  value: ${MAVEN_TRAINING_REPO}
                - name: NPM_TRAINING_REPO
                  value: ${NPM_TRAINING_REPO}
                - name: PYPI_TRAINING_REPO
                  value: ${PYPI_TRAINING_REPO}
                - name: GREMLIN_QUERY_SIZE
                  value: "50"
              resources:
                requests:
                  memory: ${MEMORY_REQUEST}
                  cpu: ${CPU_REQUEST}
                limits:
                  memory: ${MEMORY_LIMIT}
                  cpu: ${CPU_LIMIT}
parameters:
- description: Docker registry
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "quay.io"

- description: Docker image
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "openshiftio/fabric8-analytics-f8a-stacks-report"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"

- description: Schedule
  displayName: Schedule
  required: true
  name: CRON_SCHEDULE
  value: "0 0 * * *"

- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "250m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "500m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "256Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "1024Mi"

- description: "NPM Model Bucket to put collated data"
  displayName: NPM Model Version
  required: true
  name: NPM_MODEL_BUCKET
  value: "cvae-insights"

- description: "Maven Model Bucket to put collated data"
  displayName: Maven Model Version
  required: true
  name: MAVEN_MODEL_BUCKET
  value: "hpf-insights"

- description: "Python Model Bucket to put collated data"
  displayName: Python Model Version
  required: true
  name: PYPI_MODEL_BUCKET
  value: "hpf-insights"

- description: "Golang Model Bucket to put collated data"
  displayName: Golang Model Version
  required: true
  name: GOLANG_MODEL_BUCKET
  value: "golang-insights"

- description: "Golang Training Repo to fetch training file"
  displayName: Golang Training Repo
  required: true
  name: GOLANG_TRAINING_REPO
  value: "https://github.com/fabric8-analytics/f8a-golang-insights"

- description: "NPM Training Repo to fetch training file"
  displayName: NPM Training Repo
  required: true
  name: NPM_TRAINING_REPO
  value: "https://github.com/fabric8-analytics/fabric8-analytics-npm-insights"

- description: "Python Training Repo to fetch training file"
  displayName: Python Training Repo
  required: true
  name: PYPI_TRAINING_REPO
  value: "https://github.com/fabric8-analytics/f8a-pypi-insights"

- description: "Maven Training Repo to fetch training file"
  displayName: Maven Training Repo
  required: true
  name: MAVEN_TRAINING_REPO
  value: "https://github.com/fabric8-analytics/f8a-hpf-insights"
